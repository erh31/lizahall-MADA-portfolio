---
  title: "R Coding Exercise"
  author: "Elizabeth Hall"
  output: html_document
---

------------------------------------------------------------------------

**load dslabs package**

```       
library(dslabs) 
```

**get help file for gapminder data**

```         
help(gapminder) 
```

**get overview of data structue**

```         
str(gapminder) 
```

**get data summary**

```         
summary(gapminder) 
```

**determine gapminder object type**

```         
class(gapminder)
```

------------------------------------------------------------------------

**assign African countries to africadata**

~subset(gapminder,\ -\ creates\ a\ subset\ of\ gapminder\ dataframe~

~continent\ ==\ "Africa")\ -\ filters\ data\ to\ only\ include\ African\ countries~

```         
africadata <- subset(gapminder, continent == "Africa")
```

------------------------------------------------------------------------

**review data**

~str(africadata)\ -\ outputs\ info\ about\ africadata~

~summary(africadata)\ -\ outputs\ stats\ summary\ for\ africadata~

```         
str(africadata) 
summary(africadata)
```

------------------------------------------------------------------------

**create new objects**

~infmortality_lifeexpec\ \<-...\ -\ assigns\ results\ of\ operation\ to\ new\ variable~

~africadata\[,\ c...\]\ -\ subsets\ specific\ columns\ from\ data\ frame\ africadata~

~("infant_mortality",\ "life_expectancy")\ -\ specifies\ columns~

```         
infmortality_lifeexpec <- africadata[, c("infant_mortality", "life_expectancy")]
```

~population_lifeexpec\ \<-...\ -\ assigns\ results\ of\ operation\ to\ new\ variable~

~africadata\[,\ c...\]\ -\ subsets\ specific\ columns\ from\ data\ frame\ africadata~

~("population",\ "life_expectancy")\ -\ specifies\ columns~

```         
population_lifeexpec <- africadata[, c("population", "life_expectancy")]
```

------------------------------------------------------------------------

**review data**

~str(infmortality_lifeexpec)\ -\ outputs\ info\ about\ infmortality_lifeexpec~

~summary(infmortality_lifeexpec)\ -\ outputs\ stats\ summary\ for\ infmortality_lifeexpec~

```         
str(infmortality_lifeexpec) 
summary(infmortality_lifeexpec)
```

~str(population_lifeexpec)\ -\ outputs\ info\ about\ population_lifeexpec~

~summary(population_lifeexpec)\ -\ outputs\ stats\ summary\ for\ population_lifeexpec~

```         
str(population_lifeexpec) 
summary(population_lifeexpec)
```

------------------------------------------------------------------------

**plot data**

~plot(...)\ -\ creates\ plot~

~(infmortality_lifeexpecSinfant_mortality,...)\ -\ takes\ infant_mortality\ data\ from\ variable\ infmortality_lifeexpec~

~(...,infmortality_lifeexpecSlife_expectancy)\ -\ takes\ life_expectancy\ data\ from\ variable\ infmortality_lifeexpec~

~main\ -\ title\ of\ graph~

~xlab\ -\ x\ axis\ title~

~ylab\ -\ y\ axis\ title~

```         
plot(infmortality_lifeexpec$infant_mortality, infmortality_lifeexpec$life_expectancy, 
  main = "Life Expectancy vs. Infant Morality", 
  xlab = "Infant Mortality", 
  ylab = "Life Expectancy")
```

![](images/lifeexpecinf.png){width="445"}

~plot(...)\ -\ creates\ plot~

~(log10(population_lifeexpecSpopulation),...)\ -\ takes\ population\ data\ from\ variable\ population_lifeexpec,\ log\ scales\ data~

~\#\ (...,infmortality_lifeexpecSlife_expectancy)\ -\ takes\ life_expectancy\ data\ from\ variable\ infmortality_lifeexpec~

~\#\ main\ -\ title\ of\ graph~

~\#\ xlab\ -\ x\ axis\ title~

~\#\ ylab\ -\ y\ axis\ title~

```         
plot(log10(population_lifeexpec$population), infmortality_lifeexpec$life_expectancy, 
  main = "Life Expectancy vs. Population", 
  xlab = "Population (logscale)", 
  ylab = "Life Expectancy")
```

![](images/pop.png){width="445"}

-   there is a negative correlation between infant mortality and life expectancy.

-   there is a positive correlation between population size and life expectancy, as the population grows people live longer.

------------------------------------------------------------------------

**finding missing data**

~missing_data\ \<-...\ -\ assigns\ results\ of\ operation\ to\ new\ variable~

~unique(africadataSyear\[is.na(africadata\$infant_mortality)\])\ -\ retreives\ uniquie\ data\ from\ african\ data\ for\ year\ only\ where\ na\ is\ true~

~str(missing_data)\ -\ outputs\ info\ about\ missing_data~

```         
missing_data <- unique(africadata$year[is.na(africadata$infant_mortality)]) 
str(missing_data)
```

------------------------------------------------------------------------

**single year**

~creates\ a\ subset\ of\ africadata\ where\ the\ year\ =\ 2000~

~africadata_y2000\ \<-\ subset(africadata,\ year\ ==\ 2000)~

~str(africadata_y2000)\ -\ outputs\ info\ about\ africadata_y2000~

~summary(africadata_y20000)\ -\ outputs\ stats\ summary\ for\ africadata_y2000~

```         
str(africadata_y2000) 
summary(africadata_y2000)
```

------------------------------------------------------------------------

**plotting**

~this\ section\ follows\ above\ steps\ for\ variable\ creation\ and\ graphing\ but\ with\ data\ from\ africadata_y2000~

```         
infmortality_lifeexpec2000 <- africadata_y2000[, c("infant_mortality", "life_expectancy")] population_lifeexpec2000 <- africadata_y2000[, c("population", "life_expectancy")]

plot(infmortality_lifeexpec2000Sinfant_mortality, infmortality_lifeexpec2000$life_expectancy,
  main = "Life Expectancy vs. Infant Morality", 
  xlab = "Infant Mortality", 
  ylab = "Life Expectancy", 
  sub = "Year 2000")
```

![](images/augh.png){width="445"}

```         
plot(log10(population_lifeexpec2000Spopulation), infmortality_lifeexpec2000$life_expectancy,
  main = "Life Expectancy vs. Population", 
  xlab = "Population (logscale)", 
  ylab = "Life Expectancy", 
  sub = "Year 2000")
```

![](images/aughh2.png){width="445"}

------------------------------------------------------------------------

**simple model fits**

~fits\ model\ with\ infant\ mortality\ as\ predictor\ pulling\ data\ from\ africadata_y2000~

```         
fit1 <- lm(life_expectancy ~ infant_mortality, data = africadata_y2000) 
```

~fits\ model\ with\ population\ size\ as\ predictor\ pulling\ data\ from\ africadata_y2000~

```         
fit2 <- lm(life_expectancy ~ population, data = africadata_y2000)
```

~summary(fit1)\ -\ outputs\ stats\ summary\ for\ fit\ 1~

~summary(fit2)\ -\ outputs\ stats\ summary\ for\ fit\ 2~

```         
summary(fit1) 
summary(fit2)
```

-   based on the p-values for each fit, fit 1 is a better model for the data.

------------------------------------------------------------------------




**This section is contributed by Ranni Tewfik.**

This exercise uses the "us_contagious_diseases" dataset from the "dslabs" package. The dataset provides information on contagious diseases in the U.S. by state, year, and disease. There are six variables in the dataset: disease, state, year, weeks reporting, count, and population.

**Part 1 - Loading and Checking Data**

```{r}
#Load the required packages
library(dslabs)
library(dplyr)
library(ggplot2)

#Look at help file for "us_contagious_diseases"
help(us_contagious_diseases)

#Get an overview of data structure
str(us_contagious_diseases)

#Get a summary of data
summary(us_contagious_diseases)

#Determine the type of object "us_contagious_diseases" is
class(us_contagious_diseases)
```


**Part 2 - Processing Data**

```{r}
#Assign only Pertussis and Georgia in "us_contagious_diseases" to a new object
georgia <- subset(us_contagious_diseases, disease == "Pertussis" & state == "Georgia")

#Get an overview of data structure and data summary for "georgia"
str(georgia)
summary(georgia)

#Create a new object that only contains year and count
georgia1 <- georgia %>% select("year", "count")
  
#Create a new object that only contains population and count
georgia2 <- georgia %>% select("population", "count")

#Get an overview of data structure and data summary for "georgia1" and "georgia2"
str(georgia1)
summary(georgia1)

str(georgia2)
summary(georgia2)
```


**Part 3 - Plotting**

```{r}
#Plot count as a function of year
ggplot(georgia1, aes(x = year, y = count)) + geom_point() + ggtitle("Total Number of Reported Cases of Pertussis in Georgia by Year")
```


There is a negative correlation between year and count to a certain point in the plot, and then there is a break in the data (no available data for 1956-1973). After that point, there seems to be no correlation between year and count.


```{r}
#Plot count as a function of population
ggplot(georgia2, aes(x = log(population), y = count)) + geom_point() + ggtitle("Total Number of Reported Cases of Pertussis in Georgia by Population")
```


Similar to the previous plot, there is a negative correlation between population and count to a certain point. However, there is a noticeable break in the data, and there seems to be no correlation between population and count after that point. This is because no data is available for the years 1956-1973.


**Part 4 - More Data Processing**

```{r}
#Create a new object by extracting only the data for the years after 1973 from "georgia"
georgia3 <- georgia[(georgia$year >= 1974),]


#Get an overview of data structure and data summary for "africadata3"
str(georgia3)
summary(georgia3)
```


**Part 5 - More Plotting**

```{r}
#Plot count as a function of year for the years after 1973
ggplot(georgia3, aes(x = year, y = count)) + geom_point() + ggtitle("Total Number of Reported Cases of Pertussis in Georgia by Year After 1973")
```


There is no noticeable correlation between year and count after 1973.


```{r}
#Plot count as a function of population for the years after 1973
ggplot(georgia3, aes(x = log(population), y = count)) + geom_point() + ggtitle("Total Number of Reported Cases of Pertussis in Georgia by Population After 1973")
```


There is no noticeable correlation between population and count after 1973.


**Part 6 - Simple Model Fits**

```{r}
#Fit count as the outcome and year as the predictor
fit1 <- glm(count ~ year, data = georgia3, family = poisson(link = "log"))
summary(fit1)
```


After 1973, count is not significantly associated with year (p-value = 0.24).


```{r}
#Fit count as the outcome and population as the predictor
fit2 <- glm(count ~ population, data = georgia3, family = poisson(link = "log"))
summary(fit2)
```


After 1973, count is not significantly associated with population (p-value = 0.36).
